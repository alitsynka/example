{"version":3,"file":"static/js/710.f13ec066.chunk.js","mappings":"6HACA,SAAgB,QAAU,uBAAuB,UAAY,yBAAyB,KAAO,oBAAoB,OAAS,sBAAsB,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,sB,qDCKrN,SAASA,IAEpB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,CAC/B,CAACK,GAAI,EAAGC,KAAM,aACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,WACd,CAACD,GAAI,EAAGC,KAAM,WAMlB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAMC,QAAQC,UAC1BC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMI,UAAUF,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,+mBAIJC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMK,KAAKH,SAAA,EACvBJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,wLACJC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMM,OAAOJ,SAAA,EAEzBJ,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,MAAOnB,EAAaoB,SAAWC,GAAMpB,EAAeoB,EAAEC,cAAcH,OACpET,UAAWC,EAAMO,UACjBK,YAAa,2BACxBd,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAMa,MAAOC,QAASA,IAAMxB,EAAe,IAAIY,SAAC,4DAK3EC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMK,KAAKH,SAAA,EACvBJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,+HACJC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMM,OAAOJ,SAAA,EACzBJ,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,MAAOhB,EAAWiB,SAAWC,GAAMjB,EAAaiB,EAAEC,cAAcH,OAChET,UAAWC,EAAMO,UACjBK,YAAa,sBACxBd,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAMa,MAAOC,QAASA,IAAMrB,EAAa,IAAIS,SAAC,4DAKzEC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMK,KAAKH,SAAA,EACvBJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,mPAEAR,EAAMqB,KAAIC,IAEFb,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAMiB,WAAWf,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,KAAAI,SAAIc,EAAEnB,QACNC,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACnB,UAAWC,EAAMmB,aAAcL,QAASA,KAAMM,OAzClExB,EAyC6EoB,EAAEpB,QAxC/FD,EAAS,IAAID,EAAM2B,QAAOL,GAAKA,EAAEpB,KAAOA,MADxBA,KAyCmF,EAAAM,UACnEJ,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,kBAUnD,C","sources":["webpack://my-app/./src/pages/users/Users.module.scss?53a7","pages/users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"Users_Wrapper__2HhSj\",\"Container\":\"Users_Container__bWl2D\",\"Box1\":\"Users_Box1__S680P\",\"Filter\":\"Users_Filter__WQSDM\",\"FilterUser\":\"Users_FilterUser__+5+3O\",\"TextField\":\"Users_TextField__2ey8Z\",\"Apply\":\"Users_Apply__4+Lck\"};","import style from './Users.module.scss';\nimport {Button, TextField} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {useState} from \"react\";\n\n\nexport default function Users() {\n\n    const [notifyValue, setNotifyValue] = useState('')\n    const [nameValue, setNameValue] = useState('')\n    const [users, setUsers] = useState([\n        {id: 1, name: 'Alexander'},\n        {id: 2, name: 'Egor'},\n        {id: 3, name: 'Evgeniy'},\n        {id: 4, name: 'Roman'},\n    ])\n    const deleteUser = (id: number) => {\n        setUsers([...users.filter(u => u.id !== id)])\n    }\n\n    return (\n        <div className={style.Wrapper}>\n            <div className={style.Container}>\n                <h3>Для добавления бота с уведомлениями в группу,\n                    необходимо добавить самого бота,\n                    а так же указать ниже\n                    chatID и нажать \"Добавить\"</h3>\n                <div className={style.Box1}>\n                    <h4>Добавить уведомления в чат/группу</h4>\n                    <div className={style.Filter}>\n\n                        <TextField value={notifyValue} onChange={(e) => setNotifyValue(e.currentTarget.value)}\n                                   className={style.TextField}\n                                   placeholder={'чат ID'}/>\n                        <button className={style.Apply} onClick={() => setNotifyValue('')}>\n                            Добавить\n                        </button>\n                    </div>\n                </div>\n                <div className={style.Box1}>\n                    <h4>Добавить пользователя</h4>\n                    <div className={style.Filter}>\n                        <TextField value={nameValue} onChange={(e) => setNameValue(e.currentTarget.value)}\n                                   className={style.TextField}\n                                   placeholder={'user ID (123123)'}/>\n                        <button className={style.Apply} onClick={() => setNameValue('')}>\n                            Добавить\n                        </button>\n                    </div>\n                </div>\n                <div className={style.Box1}>\n                    <h4>Пользователи с персональными уведомлениями:</h4>\n                    {\n                        users.map(u => {\n                            return (\n                                <div className={style.FilterUser}>\n                                    <p>{u.name}</p>\n                                    <Button className={style.DeleteButton} onClick={() => deleteUser(u.id)}>\n                                        <DeleteIcon/>\n                                    </Button>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}"],"names":["Users","notifyValue","setNotifyValue","useState","nameValue","setNameValue","users","setUsers","id","name","_jsx","className","style","Wrapper","children","_jsxs","Container","Box1","Filter","TextField","value","onChange","e","currentTarget","placeholder","Apply","onClick","map","u","FilterUser","Button","DeleteButton","deleteUser","filter","DeleteIcon"],"sourceRoot":""}